{"version":3,"sources":["components/profile/Profile.module.css","components/friendList/friendListItem/FriendListItem.module.css","components/statistics/dataOfStatistic/DataOfStatistic.module.css","components/statistics/Statistics.module.css","components/Container/Container.module.css","components/friendList/FriendList.module.css","components/transactionHistory/TransactionHistory.module.css","components/Container/Container.js","components/profile/Profile.js","components/statistics/dataOfStatistic/DataOfStatistic.js","components/statistics/Statistics.js","components/friendList/friendListItem/FriendListItem.js","components/friendList/FriendList.js","components/transactionHistory/transaction/Transaction.js","components/transactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","Profile","name","tag","location","avatar","stats","profile","src","alt","list","label","quantity","followers","views","likes","getRandomColor","r","Math","floor","random","DataOfStatistic","id","percentage","item","style","backgroundColor","Statistics","title","map","FriendListItem","isOnline","status","width","FriendList","friends","TransactionHistory","type","amount","currency","items","transaction","Transaction","App","users","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce02eb1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2VM8b\",\"avatar\":\"Profile_avatar__27k2E\",\"name\":\"Profile_name__UTi5J\",\"tag\":\"Profile_tag__1WSAF\",\"location\":\"Profile_location__2iOGF\",\"stats\":\"Profile_stats__2NWYr\",\"list\":\"Profile_list__AaTes\",\"label\":\"Profile_label__1CkjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1PzoA\",\"status\":\"FriendListItem_status__3EF0L\",\"avatar\":\"FriendListItem_avatar__1fTaA\",\"name\":\"FriendListItem_name__3vLok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DataOfStatistic_item__aRgCk\",\"label\":\"DataOfStatistic_label__3WbZp\",\"percentage\":\"DataOfStatistic_percentage__1PdQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3eYkw\",\"title\":\"Statistics_title__r3CCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__38AQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__3Uchm\"};","//import React from 'react';\nimport s from './Container.module.css';\nimport PropTypes from 'prop-types'; \nconst Container = ({ children }) => {return (<div className={s.Container}>{children}</div>);}\nContainer.propTypes = {\n    children: PropTypes.element.isRequired\n  };\nexport default Container;\n","import s from './Profile.module.css'\nimport PropTypes from 'prop-types'; \n\nfunction Profile ({name, tag, location, avatar = \"https://image.flaticon.com/icons/png/512/2609/2609282.png\", stats}) {\n    return <div className={s.profile}>\n    <div>\n      <img\n        src={avatar}\n        alt=\"Аватар пользователя\"\n        className={s.avatar}\n      />\n      <p className={s.name}>{name}</p>\n      <p className={s.tag}>@{tag}</p>\n      <p className={s.location}>{location}</p>\n    </div>\n  \n    <ul className={s.stats}>\n      <li key = {stats.followers} className={s.list}>\n        <span className={s.label}>Followers</span>\n        <span className={s.quantity}> {stats.followers}</span>\n      </li>\n      <li key = {stats.views} className={s.list}>\n        <span className={s.label}>Views</span>\n        <span className={s.quantity}> {stats.views}</span>\n      </li>\n      <li key = {stats.likes} className={s.list}>\n        <span className={s.label}>Likes</span>\n        <span className={s.quantity}> {stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired, \n  location: PropTypes.string.isRequired, \n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n}\n\n\nexport default Profile;","import s from './DataOfStatistic.module.css';\nimport PropTypes from 'prop-types'; \n\nfunction getRandomColor() {\n    const r = function () {\n      return Math.floor(Math.random() * 256);\n    };\n    return 'rgb(' + r() + ',' + r() + ',' + r() + ')';\n}\n\nfunction DataOfStatistic ({id, label, percentage}) {\n    return (\n            <li key = {id} className={s.item}  style={{ backgroundColor: getRandomColor(255) }}>\n                <span className={s.label}>{label + \" \"}</span>\n                <span className={s.percentage} >{percentage}%</span>\n            </li>\n    );\n}\n\nexport default DataOfStatistic;","import s from './Statistics.module.css';\nimport DataOfStatistic from \"./dataOfStatistic/DataOfStatistic\";\nimport PropTypes from 'prop-types';\n\nfunction Statistics ( {title, stats} ) {\n    return (\n         <section> \n             {title && (<h2 className={s.title}>{title}</h2>) }              \n            \n            <ul className={s.list}>\n                {stats.map(({id, label, percentage }) => \n                (<DataOfStatistic key={id} label={label} percentage={percentage}/>))}\n            </ul>\n        </section>\n    )\n}\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        percentage: PropTypes.number.isRequired, \n        id: PropTypes.number.isRequired,\n    })),\n}\n\nexport default Statistics;\n","import s from \"./FriendListItem.module.css\";\nimport PropTypes from 'prop-types'; \n\nfunction FriendListItem ({ avatar, name, isOnline, id })  {\n  return (<li key={id} className={s.item}>\n              <span className={s.status} style={{ backgroundColor: isOnline ? 'green' : 'red' }} ></span>\n              <img className={s.avatar} src={avatar} alt=\"avatar\" width=\"48\" />\n              <p className={s.name}>{name}</p>\n          </li>)\n}\n\nexport default FriendListItem;","import s from \"./FriendList.module.css\";\nimport FriendListItem from \"./friendListItem/FriendListItem\";\nimport PropTypes from 'prop-types'; \n\nfunction FriendList ({friends})  {\n    return (<ul className={s.list}>           \n            {friends.map(({id, avatar, name, isOnline}) => \n                    (<FriendListItem \n                        key={id} \n                        avatar={avatar} \n                        name={name} \n                        isOnline={isOnline}\n                    />)\n                )\n            }\n        </ul>);\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(PropTypes.shape({\n        avatar: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired, \n        isOnline: PropTypes.bool.isRequired, \n        id: PropTypes.number.isRequired,\n    })),\n}\n\nexport default FriendList ","\nfunction TransactionHistory ({id, type, amount, currency}) {\n    return (\n        <tr key = {id}>\n        <td>{type}</td>\n        <td>{amount}</td>\n        <td>{currency}</td>\n        </tr>\n    );\n}\n\nexport default TransactionHistory;\n","import s from './TransactionHistory.module.css'\nimport Transaction from \"./transaction/Transaction\";\nimport PropTypes from 'prop-types'; \n\n\nfunction TransactionHistory ({items}) {\n    return (<table className={s.transaction}>\n                <thead>\n                    <tr>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {items.map(({id, type, amount, currency}) => \n                        (<Transaction \n                            key={id} \n                            type={type} \n                            amount={amount} \n                            currency={currency} \n                        />)\n                    )}\n                </tbody>\n        </table>);\n};\n\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n        amount: PropTypes.number.isRequired,\n        currency: PropTypes.string.isRequired,\n    })),\n}\n\nexport default TransactionHistory;","import Container from \"components/Container/Container\";\nimport Profile from \"./components/profile/Profile\";\nimport users from \"./user.json\";\nimport Statistics from \"./components/statistics/Statistics\";\nimport statisticalData from \"./statistical-data.json\";\nimport FriendList from \"./components/friendList/FriendList.js\";\nimport friends from \"./friends.json\";\nimport TransactionHistory from './components/transactionHistory/TransactionHistory';\nimport transactions from './transactions.json';\n\n\nexport default function App() {\n  return (\n    \n    <Container >\n      {users.map(({tag, name, location, avatar, stats}) => (\n        <Profile\n          key={tag}\n          name={name}\n          tag={tag}\n          location={location}\n          avatar={avatar}\n          stats={stats}\n        />\n        ))\n      }\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n\n","import App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}